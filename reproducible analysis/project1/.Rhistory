abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow = c(2,1), mar = c(4,4,2,1))
subset(pollution, region == "east")
east >- subset(pollution, region == "east")
east <- subset(pollution,region=="east")
head(east)
hist(east$pm25, col = "green")
west <- subset(pollution, region == "west")
hist(subset(pollution, region == "west"))
hist(subset(pollution, region == "west")$pm25, col = "green")
plot(latitude, pm25, data = polution)
head(pollution)
with(pollution, plot(latitude, pm25))
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, pollution$pm25, col = pollution$region)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd =2, lty = 2)
par(mfrow = c(1,2), mar = c(2,1))
par(mfrow = c(1,2), mar = c(5,4,2,1))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "west")
plot(west$latitude, west$pm25, main = "west")
par(mfrow = c(1,2), mar = c(5,4,2,1))
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "east")
plot(East$latitude, East$pm25, main = "East")
plot(east$latitude, east$pm25, main = "East")
?Devices
plot(eruptions, waiting)
faithful
with(faithful, plot(eruption, waiting))
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(ffile = "myplot.pdf")
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(x = mean(cars$speed), y = max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2, 2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone ~ Month, airquality)
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone(ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone(ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone(ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
par()
length(par())
names(par())
par()%pin
par()$pin
par("fg")
?pch
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = n)
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, Months == 5)
may <- subset(airquality, Month == 5)
points(may, col = "blue", type = t)
points(may, col = "blue")
points(may$Wind, may$Ozone, col = "blue", pch = 17)
notmay <- subset(airquality, !Month == 5)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 15)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
legend(topright, c(17,8), c("blue", "red"), c("May", "Other Months"))
legend("topright", c(17,8), c("blue", "red"), c("May", "Other Months"))
legend("topright", pch = c(17,8), col = c("blue", "red"), legend = c("May", "Other Months"))
abline(median(airquality$Wind), lty = 2. wth = 2)
abline(median(airquality$Wind), lty = 2, wth = 2)
?abline
abline(median(airquality$Wind), lty = 2, w = 2)
abline(median(airquality$Wind), lty = 2)
abline(v = median(airquality$Wind), lty = 2)
line(v = median(airquality$Wind))
line(median(airquality$Wind))
abline(v = median(airquality$Wind), lty = 2, lwd = 2)
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone. main = "Ozone and Wind")
plot(airquality$Wind, airquality$Ozone. main = "Ozone and Wind")
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = c(4,4,2,1), oma = c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
head(airquality)
xyplot(Ozone ~ Wind, data = airquality)
xyplot(Ozone ~ Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~  Wind | as.factor(Month), airquality, layout = c(5,1))
xyplot(Ozone ~  Wind, airquality, layout = c(5,1))
xyplot(Ozone ~  Wind | Month, airquality, layout = c(5,1))
p <- xyplot(Ozone ~ Wind, data = airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y ~ x | f, layout = c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"))
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price ~ carat | color*cut, diamonds, strip = FALSE, pch = 20, xlab = "myxlab",)
xyplot(price ~ carat | color*cut, diamonds, strip = FALSE, pch = 20, xlab = "myxlab", ylab = "myylab", main = "mymain")
xyplot(price~carat|color*cut,data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
sample(colors(), 10)
pal <- colorRamp(c("red", "blue"))
pal(0)
2
pal(1)
pal(seq(0,1,len=6))
colorRampPalette(c("red","blue"))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha = 0.5)
p3(5)
plot(x, y, pch = 19, col = rgb(3, 0, 0.5, 0.5))
plot(x, y, pch = 19, col = rgb(0, 0.5, 0.5))
plot(x, y, pch = 19, col = rgb(0, 0.5, 0.3))
plot(x, y, pch = 19, col = rgb(0, 0.5, 0.5, 0.3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20)
image(volcano, col = pal(20))
image(volcano, col = p1(20))
?pbeta
packageVersion("swirl")
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
1-(2+1)/36
deck
52
4/52
0
12/52
0
2/52
2/51
swirl()
0.8*1.6*0.5
0.64
mypdf
integrate(mypdf, 0, 1.6)
2^0.5
0.997*0.001
0.3*0.999
0.985*0.999
0.985*(1-0.001)
(1-0.985)*0.999
0.997*0.001/(0.997*0.01+0.015*0.999)
(.997*.001)/(.997*.001 + .015*.999)
21/6
expect_dice()
expect_dice(pmf)
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
edh
0.5*(edh+edl)
integrate(myfunc, 0, 2)
spop
mean(spop)
allsam
apply
apply(allsam, 1, mean)
mean(array)
mean(smeans)
setwd("D:/RStudio/reproducible analysis/project1")
activity <- read.csv("repdata-data-activity/activity.csv",
na.strings = "NA")
View(activity)
str(activity)
activity$time <- strptime(paste(activity$date), format = "%d/%m/%Y")
activity <- read.csv("repdata-data-activity/activity.csv",
na.strings = "NA")
View(activity)
totalno <- sum(activity$steps | activity$date, na.rm = TRUE)
?sum
totalno <- sum(activity$steps, activity$date, na.rm = TRUE)
totalno
totalno <- aggregate(steps ~ date, data = activity, na.rm = TRUE)
totalno <- aggregate(steps ~ date, data = activity, na.rm = TRUE, sum)
totalno
hist(totalno)
hist(totalno$steps)
barplot(totalno$steps)
mean(totalno$steps)
activity$date <- as.Date(activity$date)
str(activity)
totalno <- aggregate(steps ~ date, data = activity, na.rm = TRUE, sum)
hist(totalno$steps)
barplot(totalno$steps)
?barplot
barplot(totalno$steps, names.arg = totalno$date)
install.packages("knitr")
?rnorm
a <- rnorm(10,5, 1)
summary(a)
summary(a)
hist(totalno$steps, names.arg = totalno$steps)
hist(totalno$steps, names.arg = totalno$steps)
hist(totalno$steps, names.arg = totalno$steps, col = "grey")
title(xlab = "Total steps per day",
ylab = "Frequency",
main = "Histogram of total steps per day")
hist(totalno$steps, names.arg = totalno$steps, col = "grey",
xlab = "Total steps per day",
main = "Histogram of total steps per day")
View(activity)
totalbydays <- aggregate(steps ~ interval, data = activity,
na.rm = TRUE, sum)
head(totalbydays)
View(totalbydays)
str(activity)
?group
?summarize
?summarise
library(dplyr)
?summarise
summarise(group_by(activity, date), mean(steps))
p<-summarise(group_by(activity, interval), mean(steps))
head(p)
average <- summarise(group_by(activity, interval), mean(steps), na.rm = TRUE)
head(average)
plot(average$interval, average$`mean(steps)`, type = "l")
plot()
?plot
plot(average$interval, average$mean(steps), type = "l")
with(average, plot(interval, mean(steps)), type = "l")
with(average, plot(interval, 'mean(steps))', type = "l")
with(average, plot(interval, `mean(steps)`, type = "l"))
with(average, plot(interval, `mean(steps)`, type = "l"))
names(average)
average1 <- mutate(average, average <- mean(steps))
a <- mutate(average, average <- mean(steps))
a <- mutate(average, newname <- mean(steps))
average <- summarise(group_by(activity, interval),
meansteps <-mean(steps), na.rm = TRUE)
head(average)
average <- summarise(group_by(activity, interval),
mean(steps), na.rm = TRUE)
names(average) <- c("interval", "meansteps", "na.rm")
head(average)
names(average)
with(average, plot(interval, meansteps, type = "l"))
plot(average$interval, average$meansteps, type = "l")
?with
plot(average$interval, average$meansteps)
?plot
summarise(average)
average <- summarise(group_by(activity, interval),
mean(steps), na.rm = TRUE)
head(average)
summarise(average)
summarise(average$interval)
summarise_(average$interval)
with(average{
plot(interval, meansteps, type = "l")
})
with(average{
plot(interval, meansteps, type = "l")
mtext("average")
})
with(average{
plot(average$interval, average$meansteps, type = "l")
mtext("average")
})
with(average{
plot(average$interval, average$meansteps, type = "l")
})
with(average,
plot(average$interval, average$meansteps, type = "l")
)
with(average,
plot(average$interval, average$meansteps, type = "l")
)
with(average,
plot(average$interval, average$meansteps, type = "1")
)
View(average)
average <- summarise(group_by(activity, interval),
mean(activity$steps), na.rm = TRUE)
View(average)
average <- summarise(group_by(activity, interval),
mean(activity$steps))
View(average)
average <- activity%>%
group_by(interval)%>%
summarize(meansteps = mean(steps, na.rm = TRUE))
View(average)
?summarize
average <- summarize(group_by(activity$interval),
mean(activity$steps, na.rm = TRUE))
average <- summarize(group_by(activity,interval),
mean(activity$steps, na.rm = TRUE))
View(average)
average <- activity%>%
group_by(interval)%>%
summarize(meansteps = mean(steps, na.rm = TRUE))
View(average)
names(average)
with(average,
plot(average$interval, average$meansteps, type = "l")
)
with(average,plot(average$interval, average$meansteps,
type = "l", xlab = "5 min interval",
ylab = "Average steps",
main = "Daily activity pattern"))
with(average, interval[which.max(meansteps)])
?n
sum(is.na(activity$steps))
?inner_join
View(average)
newact <- inner_join(activity, average)
View(newact)
newact <- inner_join(activity, average, by = interval)
newact <- inner_join(activity, average, by = "interval")
View(newact)
?if
、
?if()
newact$steps <- if(is.na(newact$steps)){
newact$meansteps
}else{
newact$steps
}
subset()
?subset
newact <- subset(newact, select = steps : interval)
totalno2 <- aggregate(steps ~ date, data = newact, sum)
hist(totalno2$steps, names.arg = totalno2$steps, col = "grey",
xlab = "Total steps per day",
main = "Histogram of total steps per day")
totalno2 <- aggregate(steps ~ date, data = newact, sum)
View(totalno2)
hist(totalno2$steps, names.arg = totalno2$steps, col = "grey",
xlab = "Total steps per day",
main = "Histogram of total steps per day")
hist(totalno$steps, names.arg = totalno$steps, col = "grey",
xlab = "Total steps per day",
main = "Histogram of total steps per day")
hist(totalno$steps, col = "grey",
xlab = "Total steps per day",
main = "Histogram of total steps per day")
View(totalno)
?lines
totalno2 <- aggregate(steps ~ date, data = newact, sum)
hist(totalno2$steps, col = "grey",
xlab = "Total steps per day",
main = "Histogram of total steps per day")
hist(totalno2$steps,
xlab = "Total steps per day",
main = "Histogram of total steps per day")
View(totalno2)
View(newact)
newact <- inner_join(activity, average, by = "interval")
if(is.na(newact$steps)){
newact[1,] <- newact[4,]
}else{
newact
}
newact <- inner_join(activity, average, by = "interval")
?ifelse
newact$steps <- ifelse(is.na(newact$steps), newact$meansteps, newact$steps)
newact <- subset(newact, select = steps : interval)
totalno2 <- aggregate(steps ~ date, data = newact, sum)
View(totalno2)
hist(totalno2$steps, col = "grey",
xlab = "Total steps per day",
main = "Histogram of total steps per day")
lines(x = mean(newact$steps), col = "red")
lines(x = mean(totalno2$steps), col = "red")
windows()
hist(totalno2$steps, col = "grey",
xlab = "Total steps per day",
main = "Histogram of total steps per day")
lines(x = mean(totalno2$steps), col = "red")
ablines(x = mean(totalno2$steps), col = "red")
abline(x = mean(totalno2$steps), col = "red")
abline(v = mean(totalno2$steps), col = "red")
?abline
abline(v = mean(totalno2$steps), untf = TRUE,col = "red")
abline(v = mean(totalno2$steps), lmitre = 1,col = "red")
abline(v = mean(totalno2$steps), col = "red", lwd = 2)
?plot
plot(totalno2$steps, type = "h")
abline(v = 3, col = "red", lwd = 2)
hist(totalno2$steps, col = "grey", break = 10,
xlab = "Total steps per day",
main = "Histogram of total steps per day")
hist(totalno2$steps, col = "grey",
xlab = "Total steps per day",
main = "Histogram of total steps per day")
?hist
hist(totalno2$steps, col = "grey", breaks = 10,
xlab = "Total steps per day",
main = "Histogram of total steps per day")
?weekdays
newact$day <- weekdays(newact$date)
newact$day <- ifelse(as.character(newact$day) %in% c("Saturday", "Sunday"),
"weekend", "weekday")
newact$day <- ifelse(as.character(newact$day) %in% c("Saturday", "Sunday"),
"weekday", "weekend")
newact$day <- ifelse(as.character(newact$day) %in% c("Saturday", "Sunday"),
"weekend", "weekday")
newact <- inner_join(activity, average, by = "interval")
newact$steps <- ifelse(is.na(newact$steps),
newact$meansteps, newact$steps)
newact <- subset(newact, select = steps : interval)
newact$day <- weekdays(newact$date)
newact$day <- ifelse(newact$day) %in% c("Saturday", "Sunday"),
"weekend", "weekday")
newact$day <- ifelse(newact$day %in% c("Saturday", "Sunday"),"weekend", "weekday")
weekday <- subset(newact, day == "weekday")
View(weekday)
weekday_mean <- weekday%>%
group_by(interval)%>%
summarize(meansteps = mean(weekday$step))
View(weekday_mean)
weekend <- subset(newact, day == "weekend")
weekend_mean <- weekend%>%
group_by(interval)%>%
summarize(meansteps = mean(weekend$steps))
View(weekend_mean)
View(newact)
newact_mean <- newact%>%
group_by(interval, day)%>%
summarize(meansteps = mean(steps))
View(newact_mean)
with(newact_mean, plot(interval ~ steps | day, type = "l"))
View(newact_mean)
with(newact_mean, plot(interval ~ meansteps | day, type = "l"))
with(newact_mean, plot(meansteps ~ interval | day, type = "l"))
xyplot(meansteps ~ interval | day, data = newact_mean,
type = "l")
library(lattice)
xyplot(meansteps ~ interval | day, data = newact_mean,
type = "l")
library(lattice)
xyplot(meansteps ~ interval | day, data = newact_mean,
type = "l", layout = c(2,1))
library(lattice)
xyplot(meansteps ~ interval | day, data = newact_mean,
type = "l", layout = c(1,2))
?xyplot
library(knitr)
?knit2html()
setwd("D:/RStudio/reproducible analysis/project1")
knit("PA1_template.Rmd")
install.packages("swirl")
packageVersion("swirl")
